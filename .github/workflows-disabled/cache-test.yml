name: Test cache stuff

# Run this job on all pushes to master, for pull requests
# as well as tags with a semantic version
on:
  pull_request: {}

jobs:
  step1:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x] # This should be LTS

    steps:
    # - name: Checkout code
    #   uses: actions/checkout@v3

    # - name: Prepare testing environment
    #   uses: ./.github/actions/install-dependencies
    #   with:
    #     node-version: ${{ matrix.node-version }}

    - name: Write file
      run: echo "Test" > test.txt

    - name: Create artifact
      uses: actions/upload-artifact@v3
      with:
        name: testartifact
        path: test.txt
        retention-days: 1 # We don't need this any longer than the workflow takes, but 1 day is the minimum

  # ===================

  step2:
    needs: [step1]

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x] # This should be LTS

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Prepare testing environment
      uses: ./.github/actions/install-dependencies
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install artifact module
      run: yarn add --dev @actions/artifact

    - name: Try to list artifacts
      uses: actions/github-script@v6
      with:
        script: |
          const {DownloadHttpClient} = require("@actions/artifact/lib/internal/download-http-client.js");
          const {getDownloadSpecification} = require("@actions/artifact/lib/internal/download-specification.js");
          const {getDownloadHeaders} = require("@actions/artifact/lib/internal/utils.js");
          const client = new DownloadHttpClient();
          const artifacts = await client.listArtifacts();
          console.log("artifacts:");
          console.dir(artifacts);
          console.log(" ");

          const artifact = artifacts.value[0];
          const containerItems = await client.getContainerItems(artifact.name, artifact.fileContainerResourceUrl);
          console.log("items:");
          console.dir(containerItems);
          console.log(" ");

          const spec = getDownloadSpecification(artifact.name, containerItems.value, "/foo/bar", false);
          console.log("spec:");
          console.dir(spec);
          console.log(" ");

          const url = spec.filesToDownload[0].sourceLocation;
          const http = client.downloadHttpManager.getClient(0);
          const resp = await http.get(url, getDownloadHeaders("application/json", true, true));

          console.log("resp:");
          console.dir(resp);

