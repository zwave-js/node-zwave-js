// 800 series (LR) starting with firmware 2.0
{
	"manufacturer": "Zooz",
	"manufacturerId": "0x027a",
	"label": [
		{
			"$if": "firmwareVersion >= 2.0",
			"value": "ZSE11 800LR"
		},
		"ZSE11"
	],
	"description": "Q Sensor",
	"devices": [
		{
			"productType": "0x0201",
			"productId": "0x0006",
			"zwaveAllianceId": [
				{
					"$if": "firmwareVersion >= 2.0",
					"value": 5112
				},
				4152
			]
		}
	],
	"firmwareVersion": {
		"min": "0.0",
		"max": "255.255"
	},
	"paramInformation": [
		{
			"#": "12",
			"$import": "templates/zooz_template.json#motion_sensitivity_1_8",
			"defaultValue": 6
		},
		{
			"#": "13",
			"label": "Motion Detection: Timeout",
			"valueSize": 2,
			"unit": "seconds",
			"minValue": 10,
			"maxValue": 3600,
			"defaultValue": 30
		},
		{
			"#": "14",
			"$import": "~/templates/master_template.json#base_enable_disable",
			"label": "Motion Detection: Send Basic Set",
			"defaultValue": 1
		},
		{
			"#": "15",
			"$import": "templates/zooz_template.json#basic_set_value"
		},
		{
			"#": "16",
			"$import": "templates/zooz_template.json#binary_sensor_report"
		},
		{
			"#": "18",
			"label": "Temperature Scale",
			"valueSize": 1,
			"defaultValue": 2,
			"allowManualEntry": false,
			"options": [
				{
					"label": "Celsius",
					"value": 1
				},
				{
					"label": "Fahrenheit",
					"value": 2
				}
			]
		},
		{
			"#": "19",
			"$import": "~/templates/master_template.json#base_enable_disable",
			"label": "Flash LED on Motion",
			"defaultValue": 1
		},
		{
			"#": "20",
			"$if": "firmwareVersion >= 2.0",
			"label": "Vibration Sensor",
			"description": "Vibration sensor enable or disable.",
			"valueSize": 1,
			"minValue": 0,
			"maxValue": 1,
			"defaultValue": 1,
			"options": [
				{
					"label": "Disable vibration sensor",
					"value": 0
				},
				{
					"label": "Enable vibration sensor",
					"value": 1
				}
			]
		},
		{
			"#": "21",
			"$if": "firmwareVersion >= 2.0",
			"label": "Light Sensor Checking Interval",
			"description": "Set the frequency interval for lux value verification.  This is how often the sensor will probe the environment for lux value changes. NOTE: a report will be sent ONLY if the value has changed by the threshold value set in Parameter 185 as compared to the most recent report.",
			"valueSize": 2,
			"unit": "seconds",
			"minValue": 0,
			"maxValue": 43200,
			"defaultValue": 10,
			"unsigned": true
		},
		{
			"#": "22",
			"$if": "firmwareVersion >= 2.0",
			"label": "Temperature Sensor Checking Interval",
			"description": "Set the frequency interval for temperature value verification. This is how often the sensor will probe the environment for temperature value changes. NOTE: a report will be sent ONLY if the value has changed by the threshold value set in Parameter 183 as compared to the most recent report.",
			"valueSize": 2,
			"unit": "seconds",
			"minValue": 0,
			"maxValue": 43200,
			"defaultValue": 60,
			"unsigned": true
		},
		{
			"#": "23",
			"$if": "firmwareVersion >= 2.0",
			"label": "Humidity Sensor Checking Interval",
			"description": "Set the frequency interval for humidity value verification.  This is how often the sensor will probe the environment for humidity value changes. NOTE: a report will be sent ONLY if the value has changed by the threshold value set in Parameter 184 as compared to the most recent report.",
			"valueSize": 2,
			"unit": "seconds",
			"minValue": 0,
			"maxValue": 43200,
			"defaultValue": 60,
			"unsigned": true
		},
		{
			"#": "32",
			"$import": "templates/zooz_template.json#low_battery_alarm_threshold",
			"defaultValue": 10
		},
		{
			"#": "172",
			"$if": "firmwareVersion < 2.0",
			"label": "Minimum Reporting Frequency",
			"valueSize": 2,
			"unit": "hours",
			"minValue": 1,
			"maxValue": 744,
			"defaultValue": 4
		},
		{
			"#": "172",
			"$if": "firmwareVersion >= 2.0",
			"label": "Battery Power Checking Interval",
			"valueSize": 2,
			"unit": "hours",
			"minValue": 0,
			"maxValue": 744,
			"defaultValue": 4
		},
		{
			"#": "173",
			"$if": "firmwareVersion >= 2.0",
			"label": "Report Interval for Temperature Sensor",
			"description": "Set the reporting interval for temperature.  Values 1-43200 will send a report regardless of the threshold value selected in parameter 183.",
			"valueSize": 2,
			"unit": "seconds",
			"minValue": 0,
			"maxValue": 43200,
			"defaultValue": 0,
			"unsigned": true,
			"options": [
				{
					"label": "Reports based on threshold only set in 183",
					"value": 0
				}
			]
		},
		{
			"#": "174",
			"$if": "firmwareVersion >= 2.0",
			"label": "Report Interval for Humidity Sensor",
			"description": "Set the reporting interval for humidity.  Values 1-43200 will send a report regardless of the threshold value selected in parameter 184.",
			"valueSize": 2,
			"unit": "seconds",
			"minValue": 0,
			"maxValue": 43200,
			"defaultValue": 0,
			"unsigned": true,
			"options": [
				{
					"label": "Reports based on threshold only set in 184",
					"value": 0
				}
			]
		},
		{
			"#": "175",
			"$if": "firmwareVersion >= 2.0",
			"label": "Report Interval for Light Sensor",
			"description": "Set the reporting interval for lux.  Values 1-43200 will send a report regardless of the threshold value selected in parameter 185.",
			"valueSize": 2,
			"unit": "seconds",
			"minValue": 0,
			"maxValue": 43200,
			"defaultValue": 0,
			"unsigned": true,
			"options": [
				{
					"label": "Reports based on threshold only set in 185",
					"value": 0
				}
			]
		},
		{
			"#": "182",
			"$if": "firmwareVersion >= 2.0",
			"label": "Battery Threshold",
			"valueSize": 1,
			"unit": "%",
			"minValue": 0,
			"maxValue": 50,
			"defaultValue": 2,
			"options": [
				{
					"label": "Disable",
					"value": 0
				}
			]
		},
		{
			"#": "182",
			"$if": "firmwareVersion < 2.0",
			"$import": "~/templates/master_template.json#base_0-99_nounit",
			"label": "Battery Reporting Change Threshold",
			"unit": "%",
			"defaultValue": 0,
			"options": [
				{
					"label": "Disable",
					"value": 0
				}
			]
		},
		{
			"#": "183",
			"$if": "firmwareVersion >= 2.0",
			"label": "Temperature Reporting Change Threshold",
			"description": "Set the reporting threshold for temperature. The sensor will report new temperature value to the hub whenever temperature changes by the number of degrees entered as value. Enter 0 (disabled reporting based on the threshold) if you'd like the sensor to report based on frequency instead. For the setting below, value 1 is equal to .1 degree, value 10 = 1 degree, and so on.",
			"valueSize": 2,
			"unit": "0.1°",
			"minValue": 0,
			"maxValue": 144,
			"defaultValue": 10,
			"options": [
				{
					"label": "Disable",
					"value": 0
				}
			]
		},
		{
			"#": "183",
			"$if": "firmwareVersion < 2.0",
			"label": "Temperature Reporting Change Threshold",
			"description": "Set the reporting threshold for temperature. The sensor will report new temperature value to the hub whenever temperature changes by the number of degrees entered as value. Enter 0 (disabled reporting based on the threshold) if you'd like the sensor to report based on frequency instead. For the setting below, value 1 is equal to .1 degree, value 10 = 1 degree, and so on.",
			"valueSize": 2,
			"unit": "°F",
			"minValue": 1,
			"maxValue": 144,
			"defaultValue": 1
		},
		{
			"#": "184",
			"label": "Humidity Reporting Change Threshold",
			"description": "Set the reporting threshold for humidity. The sensor will report new humidity value to the hub whenever humidity changes by the percentage number entered as value. Enter 0 (disabled reporting based on the threshold) if you'd like the sensor to report based on frequency instead.",
			"valueSize": 1,
			"unit": "%",
			"minValue": 0,
			"maxValue": 80,
			"defaultValue": 5,
			"options": [
				{
					"label": "Disable",
					"value": 0
				}
			]
		},
		{
			"#": "185",
			"label": "Brightness Reporting Change Threshold",
			"description": "Set the reporting threshold for lux. The sensor will report new lux value to the hub whenever the brightness level changes by the number of lux entered as value. Enter 0 (disabled reporting based on the threshold) if you'd like the sensor to report based on frequency instead.",
			"valueSize": 2,
			"unit": "lux",
			"minValue": 0,
			"maxValue": 30000,
			"defaultValue": 50,
			"options": [
				{
					"label": "Disable",
					"value": 0
				}
			]
		},
		{
			"#": "201",
			"$if": "firmwareVersion >= 2.0",
			"label": "Temperature Reporting Offset",
			"description": "Set the temperature reporting offset. Value 100 is zero offset; values 0-99 decrease the value (ex: 56 means deduct 4.4 degrees from the measured value); values 101-200 increase the value (ex: value 121 means add 2.1 degree to the reported value). NOTE: Device must be factory reset to restore this value to default.",
			"valueSize": 1,
			"unit": "degrees",
			"minValue": 0,
			"maxValue": 200,
			"defaultValue": 100,
			"unsigned": true,
			"options": [
				{
					"label": "No offset",
					"value": 100
				}
			]
		},
		{
			"#": "202",
			"$if": "firmwareVersion >= 2.0",
			"label": "Humidity Reporting Offset",
			"description": "Set the humidity reporting offset. Value 100 is zero offset; values 0-99 decrease the value (ex: 95 means deduct 5% from the measured value); values 101-200 increase the value (ex: value 112 means add 12% to the reported value). NOTE: Device must be factory reset to restore this value to default.",
			"valueSize": 1,
			"unit": "%",
			"minValue": 0,
			"maxValue": 200,
			"defaultValue": 100,
			"unsigned": true,
			"options": [
				{
					"label": "No offset",
					"value": 100
				}
			]
		},
		{
			"#": "203",
			"$if": "firmwareVersion >= 2.0",
			"label": "Light Reporting Offset",
			"description": "Set the lux reporting offset. Value 100 is zero offset; values 0-99 decrease the value by 1 (ex: 75 means deduct 25 lux from the measured value); values 101-200 increase the value by 1 (ex: value 147 means add 47 lux to the reported value). NOTE: Device must be factory reset to restore this value to default.",
			"valueSize": 1,
			"unit": "lux",
			"minValue": 0,
			"maxValue": 200,
			"defaultValue": 100,
			"unsigned": true,
			"options": [
				{
					"label": "No offset",
					"value": 100
				}
			]
		}
	],
	"compat": [
		{
			// On the 500 series version of this device, the wakeup destination
			// cannot be set using Supervision, resulting in missing wakeup reports
			"$if": "firmwareVersion < 2.0",
			"commandClasses": {
				"remove": {
					"Supervision": {
						"endpoints": "*"
					}
				}
			}
		}
	],
	"metadata": {
		"inclusion": "Put your Z-Wave hub into inclusion mode and click the Z-Wave button 3 times as quickly as possible. The LED indicator will start blinking to confirm inclusion mode and turn off once inclusion is completed. The sensor will automatically pair as a repeater if connected to USB power, no special button sequence required",
		"exclusion": "1. Bring the sensor within direct range of your Z-Wave gateway (hub).\n2. Put the Z-Wave hub into exclusion mode (not sure how to do that? ask@getzooz.com).\n3. Press and release the Z-Wave button 3 times quickly.\n4. Your hub will confirm exclusion and the sensor will disappear from your controller's device list",
		"reset": "When your network’s primary controller is missing or otherwise inoperable, you may need to reset the device to factory settings manually. In order to complete the process, make sure the sensor is powered, then press and hold the Z-Wave button for at least 20 seconds.\nThe LED indicator will start flashing and turn solid on for a couple of seconds to indicate successful reset.\nNOTE: All previously recorded activity and custom settings will be erased from the device’s memory",
		"manual": [
			{
				"$if": "firmwareVersion >= 2.0",
				"value": "https://products.z-wavealliance.org/ProductManual/File?folder=&filename=cert_portal/certs/1101/zooz-zse11-800lr-manual.pdf"
			},
			"https://products.z-wavealliance.org/ProductManual/File?folder=&filename=product_documents/4152/zooz-q-sensor-zse11-ver1-manual-online.pdf"
		]
	}
}
